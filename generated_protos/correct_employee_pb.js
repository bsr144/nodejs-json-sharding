// source: correct_employee.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.correct_employee.CorrectEmployeesListResponse', null, global);
goog.exportSymbol('proto.correct_employee.EmployeeResponse', null, global);
goog.exportSymbol('proto.correct_employee.GetCorrectEmployeesRequest', null, global);
goog.exportSymbol('proto.correct_employee.ManagerDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.correct_employee.GetCorrectEmployeesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.correct_employee.GetCorrectEmployeesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.correct_employee.GetCorrectEmployeesRequest.displayName = 'proto.correct_employee.GetCorrectEmployeesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.correct_employee.EmployeeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.correct_employee.EmployeeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.correct_employee.EmployeeResponse.displayName = 'proto.correct_employee.EmployeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.correct_employee.ManagerDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.correct_employee.ManagerDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.correct_employee.ManagerDetails.displayName = 'proto.correct_employee.ManagerDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.correct_employee.CorrectEmployeesListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.correct_employee.CorrectEmployeesListResponse.repeatedFields_, null);
};
goog.inherits(proto.correct_employee.CorrectEmployeesListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.correct_employee.CorrectEmployeesListResponse.displayName = 'proto.correct_employee.CorrectEmployeesListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.correct_employee.GetCorrectEmployeesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.correct_employee.GetCorrectEmployeesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.correct_employee.GetCorrectEmployeesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.GetCorrectEmployeesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.correct_employee.GetCorrectEmployeesRequest}
 */
proto.correct_employee.GetCorrectEmployeesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.correct_employee.GetCorrectEmployeesRequest;
  return proto.correct_employee.GetCorrectEmployeesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.correct_employee.GetCorrectEmployeesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.correct_employee.GetCorrectEmployeesRequest}
 */
proto.correct_employee.GetCorrectEmployeesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.correct_employee.GetCorrectEmployeesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.correct_employee.GetCorrectEmployeesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.correct_employee.GetCorrectEmployeesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.GetCorrectEmployeesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.correct_employee.GetCorrectEmployeesRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.GetCorrectEmployeesRequest} returns this
 */
proto.correct_employee.GetCorrectEmployeesRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.correct_employee.EmployeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.correct_employee.EmployeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.correct_employee.EmployeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.EmployeeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    managerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    manager: (f = msg.getManager()) && proto.correct_employee.ManagerDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.correct_employee.EmployeeResponse}
 */
proto.correct_employee.EmployeeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.correct_employee.EmployeeResponse;
  return proto.correct_employee.EmployeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.correct_employee.EmployeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.correct_employee.EmployeeResponse}
 */
proto.correct_employee.EmployeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerid(value);
      break;
    case 4:
      var value = new proto.correct_employee.ManagerDetails;
      reader.readMessage(value,proto.correct_employee.ManagerDetails.deserializeBinaryFromReader);
      msg.setManager(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.correct_employee.EmployeeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.correct_employee.EmployeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.correct_employee.EmployeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.EmployeeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getManagerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getManager();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.correct_employee.ManagerDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.correct_employee.EmployeeResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.EmployeeResponse} returns this
 */
proto.correct_employee.EmployeeResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.correct_employee.EmployeeResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.EmployeeResponse} returns this
 */
proto.correct_employee.EmployeeResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string managerId = 3;
 * @return {string}
 */
proto.correct_employee.EmployeeResponse.prototype.getManagerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.EmployeeResponse} returns this
 */
proto.correct_employee.EmployeeResponse.prototype.setManagerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ManagerDetails manager = 4;
 * @return {?proto.correct_employee.ManagerDetails}
 */
proto.correct_employee.EmployeeResponse.prototype.getManager = function() {
  return /** @type{?proto.correct_employee.ManagerDetails} */ (
    jspb.Message.getWrapperField(this, proto.correct_employee.ManagerDetails, 4));
};


/**
 * @param {?proto.correct_employee.ManagerDetails|undefined} value
 * @return {!proto.correct_employee.EmployeeResponse} returns this
*/
proto.correct_employee.EmployeeResponse.prototype.setManager = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.correct_employee.EmployeeResponse} returns this
 */
proto.correct_employee.EmployeeResponse.prototype.clearManager = function() {
  return this.setManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.correct_employee.EmployeeResponse.prototype.hasManager = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.correct_employee.ManagerDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.correct_employee.ManagerDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.correct_employee.ManagerDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.ManagerDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    managerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    manager: (f = msg.getManager()) && proto.correct_employee.ManagerDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.correct_employee.ManagerDetails}
 */
proto.correct_employee.ManagerDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.correct_employee.ManagerDetails;
  return proto.correct_employee.ManagerDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.correct_employee.ManagerDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.correct_employee.ManagerDetails}
 */
proto.correct_employee.ManagerDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setManagerid(value);
      break;
    case 4:
      var value = new proto.correct_employee.ManagerDetails;
      reader.readMessage(value,proto.correct_employee.ManagerDetails.deserializeBinaryFromReader);
      msg.setManager(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.correct_employee.ManagerDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.correct_employee.ManagerDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.correct_employee.ManagerDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.ManagerDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getManagerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getManager();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.correct_employee.ManagerDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.correct_employee.ManagerDetails.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.ManagerDetails} returns this
 */
proto.correct_employee.ManagerDetails.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.correct_employee.ManagerDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.ManagerDetails} returns this
 */
proto.correct_employee.ManagerDetails.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string managerId = 3;
 * @return {string}
 */
proto.correct_employee.ManagerDetails.prototype.getManagerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.correct_employee.ManagerDetails} returns this
 */
proto.correct_employee.ManagerDetails.prototype.setManagerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ManagerDetails manager = 4;
 * @return {?proto.correct_employee.ManagerDetails}
 */
proto.correct_employee.ManagerDetails.prototype.getManager = function() {
  return /** @type{?proto.correct_employee.ManagerDetails} */ (
    jspb.Message.getWrapperField(this, proto.correct_employee.ManagerDetails, 4));
};


/**
 * @param {?proto.correct_employee.ManagerDetails|undefined} value
 * @return {!proto.correct_employee.ManagerDetails} returns this
*/
proto.correct_employee.ManagerDetails.prototype.setManager = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.correct_employee.ManagerDetails} returns this
 */
proto.correct_employee.ManagerDetails.prototype.clearManager = function() {
  return this.setManager(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.correct_employee.ManagerDetails.prototype.hasManager = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.correct_employee.CorrectEmployeesListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.correct_employee.CorrectEmployeesListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.correct_employee.CorrectEmployeesListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.correct_employee.CorrectEmployeesListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.CorrectEmployeesListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    employeesList: jspb.Message.toObjectList(msg.getEmployeesList(),
    proto.correct_employee.EmployeeResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.correct_employee.CorrectEmployeesListResponse}
 */
proto.correct_employee.CorrectEmployeesListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.correct_employee.CorrectEmployeesListResponse;
  return proto.correct_employee.CorrectEmployeesListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.correct_employee.CorrectEmployeesListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.correct_employee.CorrectEmployeesListResponse}
 */
proto.correct_employee.CorrectEmployeesListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.correct_employee.EmployeeResponse;
      reader.readMessage(value,proto.correct_employee.EmployeeResponse.deserializeBinaryFromReader);
      msg.addEmployees(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.correct_employee.CorrectEmployeesListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.correct_employee.CorrectEmployeesListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.correct_employee.CorrectEmployeesListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.correct_employee.CorrectEmployeesListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmployeesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.correct_employee.EmployeeResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EmployeeResponse employees = 1;
 * @return {!Array<!proto.correct_employee.EmployeeResponse>}
 */
proto.correct_employee.CorrectEmployeesListResponse.prototype.getEmployeesList = function() {
  return /** @type{!Array<!proto.correct_employee.EmployeeResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.correct_employee.EmployeeResponse, 1));
};


/**
 * @param {!Array<!proto.correct_employee.EmployeeResponse>} value
 * @return {!proto.correct_employee.CorrectEmployeesListResponse} returns this
*/
proto.correct_employee.CorrectEmployeesListResponse.prototype.setEmployeesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.correct_employee.EmployeeResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.correct_employee.EmployeeResponse}
 */
proto.correct_employee.CorrectEmployeesListResponse.prototype.addEmployees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.correct_employee.EmployeeResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.correct_employee.CorrectEmployeesListResponse} returns this
 */
proto.correct_employee.CorrectEmployeesListResponse.prototype.clearEmployeesList = function() {
  return this.setEmployeesList([]);
};


goog.object.extend(exports, proto.correct_employee);
